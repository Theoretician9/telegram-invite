version: '3.8'

services:
  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile.new
    ports:
      - "8081:80"
    depends_on:
      - api-gateway
      - frontend
    networks:
      - app-network

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - mysql
    networks:
      - app-network

  worker:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - mysql
    networks:
      - app-network

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network

  redis:
    image: redis:alpine
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=telegram_invite
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: 